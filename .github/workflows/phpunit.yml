name: PHP Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: true
      matrix:
        php-version: ['8.3']
        exclude: []
    
    env:
      DB_CONNECTION: sqlite
      DB_DATABASE: database/database.sqlite
      BROADCAST_DRIVER: log
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array

    name: PHP ${{ matrix.php-version }} - Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, dom, fileinfo, sqlite, pdo_sqlite, zip, curl, bcmath, pcntl, intl, gd, exif, iconv
        coverage: none
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader --no-interaction


    - name: Prepare database file
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Prepare Laravel Application
      run: |
        cp .env.testing .env 2>/dev/null || cp .env.example .env
        php artisan key:generate --env=testing
        chmod -R 755 storage bootstrap/cache

    - name: Execute tests
      run: php artisan test tests/Feature

    - name: Execute tests with coverage
      if: matrix.php-version == '8.3' && github.ref == 'refs/heads/main'
      run: |
        php -dxdebug.mode=coverage artisan test tests/Feature --coverage-clover=coverage.xml

    - name: Prepare coverage output directory
      if: matrix.php-version == '8.3' && github.ref == 'refs/heads/main'
      run: mkdir -p output

    - name: Create PHP coverage badge
      if: matrix.php-version == '8.3' && github.ref == 'refs/heads/main'
      uses: timkrase/phpunit-coverage-badge@v1.2.1
      with:
        report: coverage.xml
        coverage_badge_path: output/php-coverage.svg
        push_badge: false

    - name: Customize PHP coverage badge label
      if: matrix.php-version == '8.3' && github.ref == 'refs/heads/main'
      run: |
        if [ -f output/php-coverage.svg ]; then
          sed -i 's/Coverage/PHP Coverage/' output/php-coverage.svg
        fi

    - name: Deploy coverage badges to image-data branch
      if: matrix.php-version == '8.3' && github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v4
      with:
        publish_dir: ./output
        publish_branch: image-data
        github_token: ${{ secrets.GITHUB_TOKEN }}

  additional-php-versions:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.4']
    
    env:
      DB_CONNECTION: sqlite
      DB_DATABASE: database/database.sqlite
      BROADCAST_DRIVER: log
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array

    name: PHP ${{ matrix.php-version }} - Additional Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, dom, fileinfo, sqlite, pdo_sqlite, zip, curl, bcmath, pcntl, intl
        coverage: none
        tools: composer:v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader --no-interaction

    - name: Prepare database file
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Prepare Laravel Application
      run: |
        cp .env.testing .env 2>/dev/null || cp .env.example .env
        php artisan key:generate --env=testing
        chmod -R 755 storage bootstrap/cache

    - name: Execute tests
      run: php artisan test tests/Feature
