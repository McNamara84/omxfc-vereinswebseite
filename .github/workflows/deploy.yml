name: Build-&-Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    types: [closed]
    branches: [ main ]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: vars
        run: |
          echo "repo=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.vars.outputs.repo }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Erstellen der .env.production Datei auf dem Server falls nötig
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /root/maddrax-fanclub
            if [ ! -f .env.production ]; then
              echo "Erstelle .env.production falls nicht vorhanden"
              cat > .env.production << 'EOL'
            APP_NAME=MaddraxFanclub
            APP_ENV=production
            APP_KEY=${{ secrets.APP_KEY }}
            APP_DEBUG=false
            APP_URL=https://maddrax-fanclub.de
            
            LOG_CHANNEL=stack
            LOG_DEPRECATIONS_CHANNEL=null
            LOG_LEVEL=debug
            
            DB_CONNECTION=mysql
            DB_HOST=db
            DB_PORT=3306
            DB_DATABASE=maddrax
            DB_USERNAME=maddrax
            DB_PASSWORD=SuperSicher123
            EOL
            fi
            docker compose pull web
            docker compose up -d --remove-orphans
            
            # Führe zusätzliche Laravel-Befehle aus, falls nötig
            docker exec maddrax-web php artisan migrate --force
            docker exec maddrax-web php artisan config:cache
            docker exec maddrax-web php artisan route:cache
            docker exec maddrax-web php artisan view:cache